plugins {
    id 'groovy'
    id 'java'
    id "org.ajoberstar.grgit" version "3.1.1"
}

group 'testmodule'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    testngVersion = '7.0.0'
    commingLoggingsVersion = '1.2'
    codehousGroovyVersion = '2.4.5'
    lombokVersion = '1.18.10'
    slf4jVersion = '1.7.5'
    restAssuredVersion = '4.1.2'
    allureVersion = '2.8.1'
    assertjVersion = '3.11.1'
    commonsLengVersion = '2.6'
    javaxVersion = '2.0.1.Final'
    jodaVersion = '2.2'
    gsonVersion = '2.5'
    aspectjVersion = '1.8.9'
    jsonVersion = '20190722'
    awaitility = '3.0.0'
    rationalminds = '1.4'
}

dependencies {
    File exRepositories = file('ex-plugins/')
    if (exRepositories.exists()){
        exRepositories.list().each {
            implementation project(":${it}")
        }
    }
    compile "org.testng:testng:${testngVersion}"
    compile "commons-logging:commons-logging:${commingLoggingsVersion}"
    compile "org.codehaus.groovy:groovy-all:${codehousGroovyVersion}"
    compile group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"
}

def repositoryMap =  [
        "java-common" : "https://github.com/ohonchar/prime-trust-at.git",
]

task cloneRepositories {
    doLast {
        repositoryMap.each { name, url ->
            println("------------------------------------------------------------------------------------------")
            def destination = file("ex-plugins/${name}")
            try{
                println("Cloning Project ${name}")
                def grgit = org.ajoberstar.grgit.Grgit.clone(dir: destination, uri: url)
                grgit.pull()
            }catch(Exception e){
                println(e.getMessage())
            }
            println("------------------------------------------------------------------------------------------\n")
        }
    }
}
